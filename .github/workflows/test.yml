name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 'nightly'
            allow_failures: true
          - python-version: '3.8'
            env: BUILD=docs
          - python-version: '3.8'
            env: BUILD=pep8
          - python-version: '3.8'
            env: BUILD=cover

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install pbr tox
        if [ "${{ matrix.env.BUILD }}" == "docs" ]; then
          pip install -r doc/requirements.txt
        else
          pip install .[test]
        fi
    - name: Run tests
      run: |
        if [ "${{ matrix.env.BUILD }}" ]; then
          tox -e ${{ matrix.env.BUILD }}
        else
          tox

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: pip install pbr
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --skip-existing dist/*
