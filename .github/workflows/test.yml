name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        include:
          - python-version: "3.6"
            aio-available: true
            coveragerc: ".coveragerc"
          - python-version: "3.7"
            aio-available: true
            coveragerc: ".coveragerc"
          - python-version: "3.8"
            aio-available: true
            coveragerc: ".coveragerc"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest pytest-cov
          if [ "${{ matrix.aio-available }}" = "true" ]; then pip install pytest-asyncio; fi
          pip install -e .
      - name: Test with pytest
        run: |
          pytest --cov-config=${{ matrix.coveragerc }} --cov=pydispatch

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: "3.6"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install build twine
      - name: Build package
        run: python -m build
      - name: Publish package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: python -m twine upload dist/*
